


<?php $oauth_credentials = __DIR__ ."/google/secret/oauth.json";include_once __DIR__ . '/google/autoload.php';$folderName = "Form_Data_Pegawai"; $folderFormName = "form_test"; session_start();$redirect_uri = 'http://' . $_SERVER['HTTP_HOST'] . $_SERVER['PHP_SELF'];$client = new Google_Client();$client->setAuthConfig($oauth_credentials);$client->setRedirectUri($redirect_uri);$client->addScope("https://www.googleapis.com/auth/drive");$client->setAccessType('offline');$client->setApprovalPrompt('force');$service = new Google_Service_Drive($client);if (isset($_REQUEST['logout'])) {    unset($_SESSION['upload_token']);    unset($_SESSION['email_login']);    header("Location: " . $_SERVER["PHP_SELF"]);    exit;}else if(isset($_POST["password"]) ){        $password = $_POST["password"];     $logged_in = false;     $auth_file = file_get_contents($auth_file);     $auths = json_decode($auth_file);     $auth_keys = array_keys((array)$auths[0]);     foreach($auth_keys as $i => $auth_key){         if($i == 0) $username_key = $auth_key;         else  $password_key = $auth_key;     }     foreach($auths as $auth){         $auth = (array)$auth;         if($password == $auth[$password_key]) {             $logged_in = true;             $username =  $auth[$username_key];         }     }     if($logged_in){         $authUrl = $client->createAuthUrl();        echo "<script>window.open('$authUrl', 'targetWindow', 'toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=600,height=600')</script>";        $_SESSION["display_name_key"] = $username_key;         $_SESSION["display_name"] = $username;     }     else{         $_SESSION["login_error"] = "Login Fail Wrong Key";         header("Location: ".$_SERVER["PHP_SELF"]);         exit;     } } else if (file_exists(__DIR__ ."/google/secret/form_test/token.json")) {$tokenPath = __DIR__ ."/google/secret/form_test/token.json";    $accessToken = json_decode(file_get_contents($tokenPath), true);    $client->setAccessToken($accessToken);    $status= true;}if ($client->isAccessTokenExpired()) {    if ($client->getRefreshToken()) {        $client->fetchAccessTokenWithRefreshToken($client->getRefreshToken());    }     if (array_key_exists('error', $accessToken)) {        throw new Exception(join(', ', $accessToken));    }    file_put_contents(__DIR__ ."/google/secret/form_test/token.json", json_encode($client->getAccessToken()));    $status= true;}if($status){    if ($_SERVER['REQUEST_METHOD'] == 'POST' && $client->getAccessToken() ) {        if (!file_exists('files')) {          mkdir('files', 0777, true);        }        $labels = $_POST["values"];        $row = array();        $j=0;        $file_names = $_FILES["values"]["name"];        $file_keys = array_keys($file_names);        foreach($file_names as $file_name){        $tmp = explode(".", $file_name);        $ext = end($tmp);        $new_value = array($file_keys[$j] => $file_keys[$j].".".$ext);        $labels = $labels + $new_value;        print_r($ext);        $j++;    }    $keys = array_keys($labels);    if(isset($server)){         $conn = new PDO("mysql:host=$server;dbname=$db", $user, $pass);         $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);         $direct_attributes = "";         $direct_values = "";         $excepted_attrs = array();         if(isset($auth_file)){             $attr = array($_SESSION["display_name_key"] => $_SESSION["display_name"]);             $row = $row + $attr;         }         foreach($direct_to_db_folder as $j => $attr){             $direct_attributes = $direct_attributes.$direct_to_db_table[$j];             $value_index = array_search($attr, $labels);             $data = str_replace('"', '\"', $values[$value_index]);             $direct_values = $direct_values.'"'.$data.'"';              array_push($excepted_attrs,$labels[$value_index]);             if($j < count($direct_to_db_folder)-1) {                 $direct_attributes = $direct_attributes.",";                 $direct_values = $direct_values.",";             }         }         $query = "INSERT INTO ".$table_name."(".$direct_attributes.") VALUES(".$direct_values.")";         $sql = $conn->prepare($query);         $sql->execute();         $lastInsertId = $conn->lastInsertId();          $query ="SHOW KEYS FROM ".$table_name." WHERE Key_name = 'PRIMARY'";         $sql = $conn->prepare($query);         $sql->execute();         $result = $sql->fetchAll();         foreach( $result as $baris ) {             $primary_column = $baris["Column_name"];          }         $attr = array($primary_column => $lastInsertId);          $row = $row + $attr;          $json_name = "update.json";         $i = 0;         foreach($values as $value){             $is_value = true;             foreach($excepted_attrs as $excepted_attr){                 if($labels[$i] == $excepted_attr) $is_value = false;             }             if($is_value){                 if(is_array($value)) $attr = array($labels[$keys[$i]] => implode(", ",$value));                  else $attr = array($labels[$keys[$i]] => $value);                 $row = $row + $attr;             }         $i++;         }     }     else{         $json_name = "insert.json";        $i = 0;        foreach($labels as $value){            if(is_array($value)){                $attr = array($keys[$i] => implode(", ",$value));            }else $attr = array($keys[$i] => $value);            $row = $row + $attr; $i++;        }        $myJSON = json_encode($row);        $fp = fopen("files/".$json_name, "w");        fwrite($fp, $myJSON);        fclose($fp);        $namaFoldSync = "";        $optParams = array(            'pageSize' => 1,            'fields' => 'nextPageToken, files',            'q' => "name = 'Out of Sync' and mimeType = 'application/vnd.google-apps.folder'"        );        $OutofSync = $service->files->listFiles($optParams);        foreach ($OutofSync->getFiles() as $file) {            $idFoldOutOfSync = $file->getId();        }        $optParams = array(            'pageSize' => 1,            'fields' => 'nextPageToken, files',            'q' => "parents = '".$idFoldOutOfSync."' and name = '".$folderName."' and mimeType = 'application/vnd.google-apps.folder'"        );        $searchFolder = $service->files->listFiles($optParams);        foreach ($searchFolder->getFiles() as $file) {            $idProjFoldOut = $file->getId();        }        $optParams = array(            'pageSize' => 1,            'orderBy' => 'modifiedTime asc',            'fields' => 'nextPageToken, files',            'q' => "parents = '".$idProjFoldOut."' and name = '" . $folderFormName . "' and mimeType = 'application/vnd.google-apps.folder'"        );        $results = $service->files->listFiles($optParams);        foreach ($results->getFiles() as $files) {            $idFold = $files->getId();        }        $fileMetadata = new Google_Service_Drive_DriveFile(array(            'name' => "$folderFormName",            'parents' => array($idFold),            'mimeType' => 'application/vnd.google-apps.folder'));        $file = $service->files->create($fileMetadata, array('fields' => 'id'));        $folderIdSave = $file->id;        $userPermission = new Google_Service_Drive_Permission(array(            'type' => 'user',            'role' => 'writer',            'emailAddress' => 'yudipratistha@gmail.com'        ));        $request = $service->permissions->create($folderIdSave, $userPermission, array('fields' => 'id'));        $k = 0;        $file_names = $_FILES["values"]["name"];        $file_keys = array_keys($file_names);        $files = $_FILES["values"]["tmp_name"];        $file = new Google_Service_Drive_DriveFile();        $file->setParents([$folderIdSave]);        $file->setName('insert.json');        $content = file_get_contents('files/insert.json');        $result2 = $service->files->create($file,array('data' => $content, 'mimeType' => 'application/json', 'uploadType' => 'multipart'));        $file = new Google_Service_Drive_DriveFile();        $file->setName("Attachment");        $file->setParents([$folderIdSave]);        $file->setMimeType('application/vnd.google-apps.folder');        $folderAttachment = $service->files->create($file, array('fields' => 'id'));        $folderAttachmentId = $folderAttachment->id;        foreach ($files as $file){            $file_name = basename($_FILES["values"]["name"][$file_keys[$k]]);            $tmp = explode(".", $file_name);            $ext = end($tmp);            $target_file = "files/" . $file_keys[$k] . "." . $ext;            move_uploaded_file($file, $target_file);            $file = new Google_Service_Drive_DriveFile();            $file->setName($file_keys[$k] . "." . $ext);            $file->setParents([$folderAttachmentId]);            $content = file_get_contents("files/" .$file_keys[$k] . "." . $ext);            $result2 = $service->files->create($file, array(                'data' => $content,                'mimeType' => "image/'".$ext."'",                'uploadType' => 'multipart'            ));        $k++;        unlink($target_file);        }    }    header("Location: " . $_SERVER["PHP_SELF"]);    exit;}?>                     <?php include "sidebar.php"; ?>                    <div class="container border border-top-0 mt-5 shadow-sm">                         <div class="tab-content">                             <div role="tabpanel" class="tab-pane active" id="form-form_test"><form class="form-border form-horizontal" method="POST" enctype="multipart/form-data"><fieldset><div id="legend" class=""><legend class="legend-border-title">Form Test</legend></div><div class="form-group"><!-- Text input--><label class="col-md-6 control-label" for="input01">Text input</label><div class="col-md-6"><input type="text" placeholder="placeholder" class="form-control input-md" name="values[attr]" required="required"><p class="help-block"></p></div></div><div class="form-group"><!-- Text input--><label class="col-md-6 control-label" for="input01">File Upload</label><div class="col-md-6"><input type="file" value="file_1" class="form-control input-md" name="values[attr]" required="required"><p class="help-block"></p></div></div><div class="form-group"> <input type="hidden" class="valtype" name="values[subform_form_test]" value="subform_form_test"> <input type="hidden" name="values[subform_form_test][attr_count]" value="4"> <label class="col-md-6 control-label">Form Test</label> <div class="col-md-6 table-responsive"> <table id="example" class="table table-bordered"> <thead class="thead-dark"> <tr><th>txt_input</th> <th>radio_btn</th> <th>date_input</th> <th>fl_up</th> <th>action</th> </tr></thead> <tbody id="subform-form_test"></tbody> </table> <button class="btn-xs btn-info" type="button" id="tab-subform-form_test"><a>Tambah form test</a></button> </div> </div>      <div class="form-group"><!-- Button --><div class="col-md-6"><button class="btn btn-success">Button</button></div></div></fieldset></form>                    </div><?php $sub_folder_name = 'form_test'; ?> <div role="tabpanel" class="tab-pane subform" id=subform-form_test> <form class="form-border form-horizontal" method="POST" enctype="multipart/form-data"><fieldset><div id="legend" class="" aria-describedby="popover991582"><legend class="legend-border-title">Form Test</legend></div><div class="form-group"><!-- Text input--><label class="col-md-6 control-label" for="input01">Text input</label><div class="col-md-6"><input type="text" placeholder="placeholder" class="form-control input-md" name="values[txt_input]"><p class="help-block"></p></div></div><div class="form-group" aria-describedby="popover663778"><label class="col-md-6 control-label">Radio buttons</label><div class="col-md-6"><!-- Multiple Radios --><div class="form-check"> <label class="radio"><input type="radio" class="form-check-input" value="Option one" name="values[radio_btn][]" checked="checked">Option one</label></div></div></div><div class="form-group" aria-describedby="popover333119"><label class="col-md-6 control-label">Date</label><div class="col-md-6"><div class="input-group"><input type="date" class="form-control input-md" name="values[date_input]"><div class="input-group-append"><div class="input-group-text"><i class="fa fa-calendar"></i></div></div></div><p class="help-block"></p></div></div><div class="form-group"><!-- Text input--><label class="col-md-6 control-label" for="input01">File Upload</label><div class="col-md-6"><input type="file" value="file_1" class="form-control input-md" name="values[fl_up]"><p class="help-block"></p></div></div><div class="form-group"><!-- Button --><div class="col-md-6"><button class="btn btn-success">Button</button></div></div></fieldset></form>        <button id=btn-submit-subform- class="col-md-12 btn btn-success btn-block">Submit</button>         <button type="button" class="col-md-12 btn btn-info btn-block tab-form_test"><a>Back to Main Form</a></button>         <script>            $("#tab-subform-form_test").click(function(e) {                e.preventDefault();                $("#form-form_test").removeClass("active");                $("div #subform-form_test").addClass("active");            });         </script>     </div> </div>                 </div>            </main>        </div>    </body>    <script type="text/javascript">        $('a[href="' + window.location.pathname.split('/').pop() + '"]').parent().addClass("active");        $('.sidebar-content > a').click(function(){            $('.sidebar-content').removeClass('active');            $(this).parent().addClass("active");        });        $(".sidebar-dropdown > a").click(function() {            $(".sidebar-submenu").slideUp(200);            if ($(this).parent().hasClass("active")) {                $(".sidebar-dropdown").removeClass("active");                $(this).parent().removeClass("active");            } else {                $(".sidebar-dropdown").removeClass("active");                $(this).next(".sidebar-submenu").slideDown(200);                $(this).parent().addClass("active");            }        });$("#close-sidebar").click(function() {            $(".page-wrapper").removeClass("toggled");        });        $("#show-sidebar").click(function() {            $(".page-wrapper").addClass("toggled");        });    </script>    <?php } ?></php>